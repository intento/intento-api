{
  "openapi": "3.0.0",
  "info": {
    "title": "Score API",
    "description": "Ð¡ompare machine translation with reference translation",
    "version": "1.0"
  },
  "externalDocs": {
    "url": "https://github.com/intento/intento-api"
  },
  "servers": [
    {
      "url": "https://api.inten.to/"
    }
  ],
  "security": [
    {
      "APIKeyHeader": []
    }
  ],
  "paths": {
    "/evaluate/score": {
      "post": {
        "summary": "Create scoring operation",
        "requestBody": {
          "description": "Payload",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScorePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateScoreResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid form data",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      },
      "get": {
        "summary": "Retrieve list of metrics for scoring",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetricsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/evaluate/score/{id}": {
      "get": {
        "summary": "Get scoring operation details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of operation",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScoreResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation_id value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/evaluate/score/{id}/shortly": {
      "get": {
        "summary": "Get scoring operation metadata",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of operation",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScoreMetadataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation_id value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/evaluate/score/{id}/source": {
      "get": {
        "summary": "Get scoring operation input data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of operation",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScoreSourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid operation_id value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "apikey"
      }
    },
    "schemas": {
      "GetMetricsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "ai.text.translate": {
                "type": "array",
                "example": [
                  {
                    "id": 1,
                    "name": "hlepor",
                    "source": "https://github.com/aaronlifenghan/aaron-project-hlepor"
                  }
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GetScoreResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ea1684f1-4ec7-431d-9b7e-bfbe98cf0bda"
          },
          "response": {
            "type": "object",
            "properties": {
              "results": {
                "type": "object",
                "properties": {
                  "scores": {
                    "type": "array",
                    "example": [
                      {
                        "name": "hlepor",
                        "value": 0.91
                      },
                      {
                        "name": "bleu-corpus",
                        "value": 0.95
                      }
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "type": {
                "type": "object",
                "example": "scores"
              }
            }
          },

          "error": {
            "type": "string",
            "default": null
          },
          "done": {
            "type": "boolean",
            "default": true
          },
          "meta": {
            "type": "object",
            "default": {}
          }
        }
      },
      "GetScoreSourceResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "reference": {
              "type": "array",
              "example": ["A sample text"],
              "items": {
                "type": "string"
              }
            },
            "items": {
              "type": "array",
              "example": ["Not a sample text"],
              "items": {
                "type": "string"
              }
            },
            "lang": {
              "type": "string",
              "example": "en"
            }
          }
        }
      },
      "GetScoreMetadataResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ea1684f1-4ec7-431d-9b7e-bfbe98cf0bda"
          },
          "error": {
            "type": "string",
            "default": null
          },
          "done": {
            "type": "boolean",
            "default": false
          },
          "meta": {
            "type": "object",
            "default": {}
          }
        }
      },
      "CreateScoreResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ea1684f1-4ec7-431d-9b7e-bfbe98cf0bda"
          }
        }
      },
      "CreateScorePayload": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "example": ["A sample text"],
                "items": {
                  "type": "string"
                }
              },
              "reference": {
                "type": "array",
                "example": ["Not a sample text"],
                "items": {
                  "type": "string"
                }
              },
              "lang": {
                "type": "string",
                "example": "en"
              }
            }
          },
          "scores": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "score": {
                  "type": "string",
                  "example": "hlepor"
                },
                "ignore_errors": {
                  "type": "boolean",
                  "example": "true"
                }
              }
            }
          },
          "itemize": {
            "type": "boolean",
            "description": "Get scores for each pair of items (translation and reference)",
            "example": false
          },
          "async": {
            "type": "boolean",
            "example": true,
            "description": "Only 'true' is allowed yet"
          }
        }
      }
    }
  }
}
